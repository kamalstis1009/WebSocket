package com.picknsave.websocket;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.content.Intent;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.Arrays;

import io.reactivex.functions.Consumer;
import ua.naiksoftware.stomp.Stomp;
import ua.naiksoftware.stomp.StompClient;
import ua.naiksoftware.stomp.dto.StompCommand;
import ua.naiksoftware.stomp.dto.StompHeader;
import ua.naiksoftware.stomp.dto.StompMessage;

@SuppressWarnings({"FieldCanBeLocal", "ResultOfMethodCallIgnored", "CheckResult"})
public class BroadcastActivity extends AppCompatActivity {
    private Button broadcastButton;
    private Button groupButton;
    private Button chatButton;

    private EditText nameText;
    private Button sendButton;
    private TextView resultText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_broadcast);

        //-----------------------------------------------| findViewById
        broadcastButton = findViewById(R.id.broadcast);
        broadcastButton.setEnabled(false);
        groupButton = findViewById(R.id.groups);
        chatButton = findViewById(R.id.chat);
        nameText = findViewById(R.id.name);
        sendButton = findViewById(R.id.send);
        resultText = findViewById(R.id.show);

        //-----------------------------------------------| StompClient Connect
        // Start connecting to server
        StompClient mClient = Stomp.over(Stomp.ConnectionProvider.OKHTTP, ConstantKey.SOCKET_SERVER_URL);
        StompUtils.lifecycle(mClient); //Connection callback
        mClient.connect();

        // Subscribe broadcast endpoint to receive response by RX Java
        mClient.topic(ConstantKey.broadcastResponse).subscribe(new Consumer<StompMessage>() {
            @Override
            public void accept(StompMessage stompMessage) throws Exception {
                JSONObject jsonObject = new JSONObject(stompMessage.getPayload());
                Log.i(ConstantKey.TAG, "Receive: " + stompMessage.getPayload());
                BroadcastActivity.this.runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        try {
                            resultText.append(jsonObject.getString("response") + "\n");
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                });
            }
        });

        //-----------------------------------------------| Sent Message
        sendButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                JSONObject jsonObject = new JSONObject();
                try {
                    jsonObject.put("name", nameText.getText());
                } catch (JSONException e) {
                    e.printStackTrace();
                }

                mClient.send(new StompMessage(
                        // Stomp command
                        StompCommand.SEND,
                        // Stomp Headers, Send Headers with STOMP the first header is required, and the other can be customized by ourselves
                        Arrays.asList(
                                new StompHeader(StompHeader.DESTINATION, ConstantKey.broadcast),
                                new StompHeader("authorization", "this is a token generated by your code!")
                        ),
                        // Stomp payload
                        jsonObject.toString())
                ).subscribe();
                nameText.setText("");
            }
        });

        //-----------------------------------------------| Goto Other Activity
        groupButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent();
                intent.setClass(BroadcastActivity.this, GroupActivity.class);
                BroadcastActivity.this.startActivity(intent);
                BroadcastActivity.this.finish();
            }
        });
        chatButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent();
                intent.setClass(BroadcastActivity.this, ChatActivity.class);
                BroadcastActivity.this.startActivity(intent);
                BroadcastActivity.this.finish();
            }
        });
    }
}